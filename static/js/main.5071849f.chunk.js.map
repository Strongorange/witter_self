{"version":3,"sources":["context.js","fbase.js","screens/Weet.js","screens/Home.js","screens/Profile.js","screens/Login.js","components/PageNotFound.js","components/Navigation.js","components/Router.js","components/GlobalStyle.js","components/App.js","index.js"],"names":["UserContext","createContext","useUser","useContext","user","useSetUser","setUser","UserProvider","children","useState","weets","setWeets","isLoggedIn","setIsLoggedIn","Provider","value","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","WeetEach","styled","div","Weet","weetObj","isOwner","editing","setEditing","editingVal","setEditingVal","onDeleteClick","e","a","window","confirm","doc","id","delete","onEditClick","prev","onEditSubmit","preventDefault","update","text","onSubmit","className","type","placeholder","autoFocus","onChange","target","onClick","attachmentUrl","src","icon","faTrash","faPencilAlt","Container","Form","form","InputContainer","AttachContainer","WeetContainer","Home","weet","setWeet","attachment","setAttachment","fileInput","useRef","useEffect","collection","onSnapshot","snapshot","tempWeetObj","docs","map","data","console","log","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","add","createdAt","Date","now","creatorId","htmlFor","style","color","cursor","faPlus","size","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","current","faTimes","sort","b","ProfileForm","Profile","history","useHistory","myWeets","setMyWeets","displayName","newName","setNewName","updateProfile","currentUser","getMyWeets","where","orderBy","get","signOut","push","marginBottom","myWeet","Text","span","SocialContainer","SocialButton","button","Input","input","Login","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","name","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","faGoogle","faGithub","PageNotFound","Nav","nav","Navigation","to","faUserAlt","path","exact","component","GlobalStyle","createGlobalStyle","reset","App","init","setInit","onAuthStateChanged","index","indexOf","tempName","substring","args","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5071849f.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst UserContext = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(\"\");\r\n  const [weets, setWeets] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  return (\r\n    <UserContext.Provider\r\n      value={{ user, setUser, isLoggedIn, setIsLoggedIn, weets, setWeets }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => {\r\n  const { user } = useContext(UserContext);\r\n  return user;\r\n};\r\n\r\nexport const useSetUser = () => {\r\n  const { setUser } = useContext(UserContext);\r\n  return setUser;\r\n};\r\n\r\nexport const useIsLoggedIn = () => {\r\n  const { isLoggedIn } = useContext(UserContext);\r\n  return isLoggedIn;\r\n};\r\n\r\nexport const useSetIsLoggedIn = () => {\r\n  const { setIsLoggedIn } = useContext(UserContext);\r\n  return setIsLoggedIn;\r\n};\r\n\r\nexport const useWeets = () => {\r\n  const { weets } = useContext(UserContext);\r\n  return weets;\r\n};\r\n\r\nexport const useSetWeets = () => {\r\n  const { setWeets } = useContext(UserContext);\r\n  return setWeets;\r\n};\r\n\r\nexport default UserProvider;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst WeetEach = styled.div`\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  width: 320px;\r\n  max-width: 320px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: rgba(0, 0, 0, 0.8);\r\n\r\n  h4 {\r\n    font-size: 14px;\r\n  }\r\n  img {\r\n    right: 60px;\r\n    top: 0px;\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n\r\n  .weet__actions {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 10px;\r\n    span {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .editForm {\r\n    width: 100%;\r\n    max-width: 320px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 15px;\r\n  }\r\n  .formBtn {\r\n    cursor: pointer;\r\n    width: 100%;\r\n    padding: 7px 20px;\r\n    text-align: center;\r\n    color: white;\r\n    border-radius: 20px;\r\n    background-color: #04aaff;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .cancelBtn {\r\n    width: 280px;\r\n    cursor: pointer;\r\n    background-color: tomato;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  .formInput {\r\n    width: 100%;\r\n    padding: 10px 20px;\r\n    border-radius: 20px;\r\n    border: 1px solid black;\r\n    text-align: center;\r\n    background-color: white;\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst Weet = ({ weetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [editingVal, setEditingVal] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setEditingVal(value);\r\n  };\r\n  const onDeleteClick = async (e) => {\r\n    const ok = window.confirm(\"정말 삭제하시겠어요?\");\r\n    if (ok) {\r\n      await dbService.doc(`weets/${weetObj.id}`).delete();\r\n    }\r\n  };\r\n  const onEditClick = (e) => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n  const onEditSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await dbService.doc(`weets/${weetObj.id}`).update({\r\n      text: editingVal,\r\n    });\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <WeetEach>\r\n        {editing ? (\r\n          <>\r\n            <form onSubmit={onEditSubmit} className=\"editForm\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"트윗 수정\"\r\n                value={editingVal}\r\n                autoFocus\r\n                onChange={onChange}\r\n                className=\"formInput\"\r\n              />\r\n              <input type=\"submit\" value=\"수정\" className=\"formBtn\" />\r\n            </form>\r\n            <span onClick={onEditClick} className=\"formBtn cancelBtn\">\r\n              취소\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h4>{weetObj.text}</h4>\r\n            {weetObj.attachmentUrl && <img src={weetObj.attachmentUrl} />}\r\n            {isOwner && (\r\n              <div className=\"weet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={onEditClick}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </WeetEach>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weet;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { dbService, storageService } from \"../fbase\";\r\nimport { useUser, useSetWeets } from \"../context\";\r\nimport { useWeets } from \"../context\";\r\nimport Weet from \"./Weet\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 400px;\r\n  width: 100%;\r\n  margin: 80px auto 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n  .weetInput {\r\n    flex-grow: 1;\r\n    height: 40px;\r\n    padding: 0px 20px;\r\n    color: white;\r\n    border: 1px solid #04aaff;\r\n    border-radius: 20px;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n  }\r\n  .input__arrow {\r\n    position: absolute;\r\n    right: 0;\r\n    background-color: #04aaff;\r\n    height: 40px;\r\n    width: 40px;\r\n    padding: 10px 0px;\r\n    text-align: center;\r\n    border-radius: 20px;\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst AttachContainer = styled.div`\r\n  img {\r\n    height: 80px;\r\n    width: 80px;\r\n    border-radius: 40px;\r\n  }\r\n  .attachClear {\r\n    color: #04aaff;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    span {\r\n      margin-right: 10px;\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst WeetContainer = styled.div`\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst Home = () => {\r\n  const [weet, setWeet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const user = useUser();\r\n  const setWeets = useSetWeets();\r\n  const weets = useWeets();\r\n  const fileInput = useRef();\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"weets\").onSnapshot((snapshot) => {\r\n      const tempWeetObj = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setWeets(tempWeetObj);\r\n    });\r\n  }, []);\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n\r\n    setWeet(value);\r\n  };\r\n  const onFileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    if (weet === \"\") {\r\n      return;\r\n    }\r\n    console.log(\"active\");\r\n    e.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${user.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    // await dbService.collection(\"weets\").doc().set({\r\n    //   text: weet,\r\n    //   createdAt: Date.now(),\r\n    //   owner: user.uid,\r\n    //   attachmentUrl,\r\n    // });\r\n    await dbService.collection(\"weets\").add({\r\n      text: weet,\r\n      createdAt: Date.now(),\r\n      creatorId: user.uid,\r\n      attachmentUrl,\r\n    });\r\n    setWeet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onClearAttachment = () => {\r\n    setAttachment(null);\r\n    fileInput.current.value = null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Form onSubmit={onSubmit}>\r\n          <InputContainer className=\"input__container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"트윗을 입력하세요\"\r\n              value={weet}\r\n              onChange={onChange}\r\n              className=\"weetInput\"\r\n            />\r\n            <input type=\"submit\" value=\"→\" className=\"input__arrow\" />\r\n          </InputContainer>\r\n          <label htmlFor=\"attach-file\" className=\"input__label\">\r\n            <span style={{ color: \"#04aaff\", cursor: \"pointer\" }}>\r\n              이미지 추가\r\n            </span>\r\n            <FontAwesomeIcon\r\n              icon={faPlus}\r\n              size=\"xs\"\r\n              style={{ color: \"#04aaff\" }}\r\n            />\r\n          </label>\r\n          <input\r\n            id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            ref={fileInput}\r\n            onChange={onFileChange}\r\n            style={{ opacity: 0 }}\r\n          />\r\n          {attachment && (\r\n            <AttachContainer>\r\n              <img src={attachment} style={{ backgroundImage: attachment }} />\r\n              <div className=\"attachClear\" onClick={onClearAttachment}>\r\n                <span>삭제</span>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </div>\r\n            </AttachContainer>\r\n          )}\r\n        </Form>\r\n\r\n        <WeetContainer className=\"weetsContainer\">\r\n          {weets\r\n            .sort((a, b) => a.createdAt - b.createdAt)\r\n            .map((weet) => (\r\n              <Weet\r\n                key={weet.id}\r\n                weetObj={weet}\r\n                isOwner={weet.creatorId === user.uid}\r\n              />\r\n            ))}\r\n        </WeetContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService, dbService } from \"../fbase\";\r\nimport { useUser, useSetUser } from \"../context\";\r\nimport Weet from \"./Weet\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 400px;\r\n  width: 100%;\r\n  margin: 80px auto 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  .logOut {\r\n    cursor: pointer;\r\n    width: 100%;\r\n    padding: 7px 20px;\r\n    text-align: center;\r\n    color: white;\r\n    border-radius: 20px;\r\n    background-color: tomato;\r\n    cursor: pointer;\r\n    width: 360px;\r\n    margin-top: 40px;\r\n  }\r\n`;\r\n\r\nconst WeetContainer = styled.div`\r\n  max-width: 400px;\r\n  width: 100%;\r\n  margin: 80px auto 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProfileForm = styled.form`\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.9);\r\n  padding-bottom: 30px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  input {\r\n    text-align: center;\r\n    border: 1px solid black;\r\n    border-radius: 20px;\r\n    background-color: white;\r\n    color: black;\r\n    padding: 5px;\r\n  }\r\n  .updateBtn {\r\n    background-color: #04aaff;\r\n    color: white;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst Profile = () => {\r\n  const history = useHistory();\r\n  const user = useUser();\r\n  const setUser = useSetUser();\r\n  const [myWeets, setMyWeets] = useState([]);\r\n  const [newName, setNewName] = useState(user.displayName);\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewName(value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    console.log(\"actove\");\r\n    e.preventDefault();\r\n    if (user.displayName !== newName) {\r\n      user.updateProfile({\r\n        displayName: newName,\r\n      });\r\n      setUser({ ...user, displayName: authService.currentUser.displayName });\r\n    }\r\n  };\r\n\r\n  const onLogoutClick = (e) => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getMyWeets = async () => {\r\n    const weets = await dbService\r\n      .collection(\"weets\")\r\n      .where(\"creatorId\", \"==\", user.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    setMyWeets(weets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyWeets();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <ProfileForm onSubmit={onSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"이름 변경\"\r\n            value={newName}\r\n            onChange={onChange}\r\n            className=\"changeInput\"\r\n          />\r\n          <input type=\"submit\" value=\"이름 변경\" className=\"updateBtn\" />\r\n        </ProfileForm>\r\n        <span onClick={onLogoutClick} className=\"logOut\">\r\n          로그아웃\r\n        </span>\r\n        <WeetContainer>\r\n          <h3 style={{ marginBottom: \"20px\" }}>나의 트윗</h3>\r\n          {myWeets\r\n            .sort((a, b) => a.createdAt - b.createdAt)\r\n            .map((myWeet) => (\r\n              <Weet\r\n                key={myWeet.id}\r\n                weetObj={myWeet}\r\n                isOwner={myWeet.creatorId === user.uid}\r\n              />\r\n            ))}\r\n        </WeetContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"../fbase\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  .twitterIcon {\r\n    color: #64a5f2;\r\n    font-size: 50px;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  max-width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  gap: 10px;\r\n\r\n  input {\r\n    max-width: 320px;\r\n    width: 100%;\r\n    border: none;\r\n    border-radius: 20px;\r\n    padding: 7px;\r\n    font-size: 15px;\r\n  }\r\n\r\n  .authAction {\r\n    background-color: #4ca7f8;\r\n    color: white;\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  text-decoration: underline;\r\n  color: #4ca7f8;\r\n  cursor: pointer;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst SocialContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  max-width: 320px;\r\n`;\r\n\r\nconst SocialButton = styled.button`\r\n  font-size: 18px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  background-color: white;\r\n\r\n  .socialIcon {\r\n    margin-left: 7px;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input``;\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const toggleNewAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        //create\r\n        const data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        //login\r\n        const data = await authService.signInWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value, name },\r\n    } = e;\r\n    name === \"email\" ? setEmail(value) : setPassword(value);\r\n  };\r\n  const onSocialClick = async (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <Container className=\"authContainer\">\r\n      <FontAwesomeIcon icon={faTwitter} className=\"twitterIcon\" />\r\n      <Form onSubmit={onSubmit}>\r\n        <Input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <Input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <Input\r\n          className=\"authAction\"\r\n          type=\"submit\"\r\n          value={newAccount ? \"회원가입\" : \"로그인\"}\r\n        />\r\n        {error && <span>{error}</span>}\r\n      </Form>\r\n      <Text onClick={toggleNewAccount}>\r\n        {newAccount ? \"로그인하러 가기\" : \"계정 만들기\"}\r\n      </Text>\r\n      <SocialContainer>\r\n        <SocialButton\r\n          className=\"socialBtn\"\r\n          name=\"google\"\r\n          onClick={onSocialClick}\r\n        >\r\n          Continue with\r\n          <FontAwesomeIcon icon={faGoogle} className=\"socialIcon\" />\r\n        </SocialButton>\r\n        <SocialButton\r\n          className=\"socialBtn\"\r\n          name=\"github\"\r\n          onClick={onSocialClick}\r\n        >\r\n          Continue with\r\n          <FontAwesomeIcon icon={faGithub} className=\"socialIcon\" />\r\n        </SocialButton>\r\n      </SocialContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst PageNotFound = () => {\r\n  return (\r\n    <div>\r\n      <span>Page Not Found</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport { useUser } from \"../context\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUserAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Nav = styled.nav`\r\n  margin-top: 50px;\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  ul {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    max-width: 200px;\r\n    li {\r\n      a {\r\n        color: #64a5f2;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n    }\r\n    span {\r\n      font-size: 15px;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Navigation = () => {\r\n  const user = useUser();\r\n\r\n  return (\r\n    <Nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">\r\n            <FontAwesomeIcon icon={faTwitter} />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"profile\">\r\n            <FontAwesomeIcon icon={faUserAlt} />\r\n            <span>{`${user.displayName}의 프로필`}</span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport {\r\n  useUser,\r\n  useSetUser,\r\n  useIsLoggedIn,\r\n  useSetIsLoggedIn,\r\n} from \"../context\";\r\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Home from \"../screens/Home\";\r\nimport Profile from \"../screens/Profile\";\r\nimport Login from \"../screens/Login\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nexport default () => {\r\n  const isLoggedIn = useIsLoggedIn();\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Navigation />\r\n            <Switch>\r\n              <Route path=\"/\" exact>\r\n                <Home />\r\n              </Route>\r\n              <Route path=\"/profile\" exact>\r\n                <Profile />\r\n              </Route>\r\n              <Route component={PageNotFound} />\r\n            </Switch>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Login />\r\n              </Route>\r\n              <Route component={PageNotFound} />\r\n            </Switch>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","/* eslint-disable */\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css2?family=Do+Hyeon&display=swap');\r\n    ${reset}\r\n    body {\r\n        font-family: 'Do Hyeon', sans-serif;\r\n        font-size:35px;\r\n        background-color: black;\r\n        color: white\r\n    }\r\n    button {\r\n        font-family: 'Do Hyeon', sans-serif;\r\n        font-size:20px;\r\n    }\r\n    input {\r\n        all:unset;\r\n        box-sizing:border-box;\r\n        font-family: 'Do Hyeon', sans-serif;\r\n        font-size:20px;\r\n    }\r\n\r\n    span {\r\n        font-family: 'Do Hyeon', sans-serif;\r\n        font-size:20px;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { useEffect, useState } from \"react\";\nimport Router from \"./Router\";\nimport { authService } from \"../fbase\";\nimport { useSetIsLoggedIn, useSetUser } from \"../context\";\nimport GlobalStyle from \"./GlobalStyle\";\n\nconst App = () => {\n  const setIsLoggedIn = useSetIsLoggedIn();\n  const [init, setInit] = useState(false);\n  const setUser = useSetUser();\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        if (user.displayName === null) {\n          console.log(\"null user\", user);\n          const index = user.email.indexOf(\"@\");\n          const tempName = user.email.substring(0, index);\n          user.updateProfile({\n            displayName: tempName,\n          });\n        }\n        setUser({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle />\n      {init ? <Router /> : \"Initializing\"}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport UserProvider from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}